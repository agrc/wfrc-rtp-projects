name: Test and Cut Release

on:
  push:
    branches:
      - main
      - dev

permissions:
  contents: write
  id-token: write
  deployments: write
  pull-requests: write

concurrency:
  group: '${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 🧹 Lint
        run: npm run lint

      - name: 🧪 Run tests
        run: npm run test

  release-please:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          prerelease: ${{ github.ref == 'refs/heads/dev' }}
          skip-github-release: ${{ github.ref == 'refs/heads/dev' }}
          default-branch: ${{ github.head_ref || github.ref_name }}

  rebuild-docs:
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.release_created
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 📚 Update Config Docs
        run: npm run update-config-docs

      - name: 🚀 Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          add: 'docs'
          message: 'docs: update config docs'

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [release-please, test]
    if: github.ref == 'refs/heads/main' && needs.release-please.outputs.release_created
    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 🏗 Run build
        run: npm run build

      - name: 🗜 Compress
        run: npm run zip

      - name: 🚀 Create release
        uses: softprops/action-gh-release@v1
        with:
          files: build.zip

  deploy-dev:
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: dev
      url: https://wfrc-rtp.dev.utah.gov
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - id: auth
        name: 🗝️ Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          access_token_scopes: 'email, openid, https://www.googleapis.com/auth/cloud-platform, https://www.googleapis.com/auth/firebase'
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 🏗 Run build script
        run: npm run build:stage

      - name: 🪣 Cache firebase
        uses: actions/cache@v3
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-
      - name: 🚀 Firebase deploy
        run: >
          npx firebase-tools deploy
          --only hosting
          --project ${{ secrets.PROJECT_ID }}
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
